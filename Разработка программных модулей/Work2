public class House {
    private int id; 
    private int apartmentNumber; 
    private double area; 
    private int floor; 
    private int rooms; 
    private String street; 
    private String buildingType; 
    private int operationPeriod;

    public House(int id, int apartmentNumber, double area, int floor, int rooms, String street, String buildingType, int operationPeriod) {
        this.id = id;
        this.apartmentNumber = apartmentNumber;
        this.area = area;
        this.floor = floor;
        this.rooms = rooms;
        this.street = street;
        this.buildingType = buildingType;
        this.operationPeriod = operationPeriod;
    }

    public House() { 
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public int getApartmentNumber() {
        return apartmentNumber;
    }

    public void setApartmentNumber(int apartmentNumber) {
        this.apartmentNumber = apartmentNumber;
    }

    public double getArea() {
        return area;
    }

    public void setArea(double area) {
        this.area = area;
    }

    public int getFloor() {
        return floor;
    }

    public void setFloor(int floor) {
        this.floor = floor;
    }

    public int getRooms() {
        return rooms;
    }

    public void setRooms(int rooms) {
        this.rooms = rooms;
    }

    public String getStreet() {
        return street;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    public String getBuildingType() {
        return buildingType;
    }

    public void setBuildingType(String buildingType) {
        this.buildingType = buildingType;
    }

    public int getOperationPeriod() {
        return operationPeriod;
    }

    public void setOperationPeriod(int operationPeriod) {
        this.operationPeriod = operationPeriod;
    }

    @Override
    public String toString() {
        return "House{id=" + id + ", apartmentNumber=" + apartmentNumber + ", area=" + area + ", floor=" + floor +
                ", rooms=" + rooms + ", street='" + street + "', buildingType='" + buildingType + "', operationPeriod=" + operationPeriod + "}";
    }
}

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class HouseCatalog {
    private List<House> houses;

    public HouseCatalog() {
        this.houses = new ArrayList<>();
    }

    public void addHouse(House house) {
        houses.add(house);
    }

    public List<House> getHousesByRooms(int rooms) {
        return houses.stream()
                .filter(house -> house.getRooms() == rooms)
                .collect(Collectors.toList());
    }

    public List<House> getHousesByRoomsAndFloorRange(int rooms, int minFloor, int maxFloor) {
        return houses.stream()
                .filter(house -> house.getRooms() == rooms && house.getFloor() >= minFloor && house.getFloor() <= maxFloor)
                .collect(Collectors.toList());
    }

    public List<House> getHousesByArea(double minArea) {
        return houses.stream()
                .filter(house -> house.getArea() > minArea)
                .collect(Collectors.toList());
    }

    public void printHouses(List<House> houses) {
        if (houses.isEmpty()) {
            System.out.println("Нет квартир для отображения.");
        } else {
            houses.forEach(System.out::println);
        }
    }

    public static void main(String[] args) {
        HouseCatalog catalog = new HouseCatalog();

        catalog.addHouse(new House(1, 101, 75.5, 3, 2, "Main St", "Brick", 10));
        catalog.addHouse(new House(2, 102, 85.0, 5, 3, "Main St", "Concrete", 8));
        catalog.addHouse(new House(3, 201, 65.0, 2, 2, "Oak St", "Wood", 15));
        catalog.addHouse(new House(4, 202, 92.0, 6, 4, "Pine St", "Brick", 5));

        System.out.println("Квартиры с 2-мя комнатами:");
        catalog.printHouses(catalog.getHousesByRooms(2));

        System.out.println("\nКвартиры с 3-мя комнатами на этажах от 3 до 6:");
        catalog.printHouses(catalog.getHousesByRoomsAndFloorRange(3, 3, 6));

        System.out.println("\nКвартиры с площадью больше 80:");
        catalog.printHouses(catalog.getHousesByArea(80));
    }
}
